<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.mapper.ProductOrderMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.ProductOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_userid" property="updateUserid" jdbcType="INTEGER" />
    <result column="order_seq" property="orderSeq" jdbcType="VARCHAR" />
    <result column="order_source" property="orderSource" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="factory_id" property="factoryId" jdbcType="INTEGER" />
    <result column="factory_yield" property="factoryYield" jdbcType="INTEGER" />
    <result column="bidding_end_date" property="biddingEndDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, flag, create_time, create_userid, update_time, update_userid, order_seq, order_source, 
    product_id, product_count, end_date, order_status, factory_id, factory_yield, bidding_end_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.ProductOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_product_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_product_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.ProductOrderExample" >
    delete from t_product_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.ProductOrder" >
    insert into t_product_order (id, flag, create_time, 
      create_userid, update_time, update_userid, 
      order_seq, order_source, product_id, 
      product_count, end_date, order_status, 
      factory_id, factory_yield, bidding_end_date
      )
    values (#{id,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserid,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserid,jdbcType=INTEGER}, 
      #{orderSeq,jdbcType=VARCHAR}, #{orderSource,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{productCount,jdbcType=INTEGER}, #{endDate,jdbcType=DATE}, #{orderStatus,jdbcType=INTEGER}, 
      #{factoryId,jdbcType=INTEGER}, #{factoryYield,jdbcType=INTEGER}, #{biddingEndDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.ProductOrder" >
    insert into t_product_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserid != null" >
        create_userid,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserid != null" >
        update_userid,
      </if>
      <if test="orderSeq != null" >
        order_seq,
      </if>
      <if test="orderSource != null" >
        order_source,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productCount != null" >
        product_count,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
      <if test="factoryYield != null" >
        factory_yield,
      </if>
      <if test="biddingEndDate != null" >
        bidding_end_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="orderSeq != null" >
        #{orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="orderSource != null" >
        #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="factoryYield != null" >
        #{factoryYield,jdbcType=INTEGER},
      </if>
      <if test="biddingEndDate != null" >
        #{biddingEndDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.ProductOrderExample" resultType="java.lang.Integer" >
    select count(*) from t_product_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_product_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null" >
        create_userid = #{record.createUserid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserid != null" >
        update_userid = #{record.updateUserid,jdbcType=INTEGER},
      </if>
      <if test="record.orderSeq != null" >
        order_seq = #{record.orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="record.orderSource != null" >
        order_source = #{record.orderSource,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productCount != null" >
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.factoryId != null" >
        factory_id = #{record.factoryId,jdbcType=INTEGER},
      </if>
      <if test="record.factoryYield != null" >
        factory_yield = #{record.factoryYield,jdbcType=INTEGER},
      </if>
      <if test="record.biddingEndDate != null" >
        bidding_end_date = #{record.biddingEndDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_product_order
    set id = #{record.id,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_userid = #{record.createUserid,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_userid = #{record.updateUserid,jdbcType=INTEGER},
      order_seq = #{record.orderSeq,jdbcType=VARCHAR},
      order_source = #{record.orderSource,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_count = #{record.productCount,jdbcType=INTEGER},
      end_date = #{record.endDate,jdbcType=DATE},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      factory_id = #{record.factoryId,jdbcType=INTEGER},
      factory_yield = #{record.factoryYield,jdbcType=INTEGER},
      bidding_end_date = #{record.biddingEndDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.ProductOrder" >
    update t_product_order
    <set >
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="orderSeq != null" >
        order_seq = #{orderSeq,jdbcType=VARCHAR},
      </if>
      <if test="orderSource != null" >
        order_source = #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="factoryYield != null" >
        factory_yield = #{factoryYield,jdbcType=INTEGER},
      </if>
      <if test="biddingEndDate != null" >
        bidding_end_date = #{biddingEndDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.ProductOrder" >
    update t_product_order
    set flag = #{flag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=INTEGER},
      order_seq = #{orderSeq,jdbcType=VARCHAR},
      order_source = #{orderSource,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_count = #{productCount,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=DATE},
      order_status = #{orderStatus,jdbcType=INTEGER},
      factory_id = #{factoryId,jdbcType=INTEGER},
      factory_yield = #{factoryYield,jdbcType=INTEGER},
      bidding_end_date = #{biddingEndDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据产品id找到对应的不能删除的产品订单 -->
  <select id="selectEnDelProOrdersByProId" resultMap="BaseResultMap" parameterType="int" >
    select <include refid="Base_Column_List" />
    from t_product_order
    where product_id=#{value} and order_status in (20,40,50,60)
  </select>
</mapper>