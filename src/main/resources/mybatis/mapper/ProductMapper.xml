<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_userid" property="updateUserid" jdbcType="INTEGER" />
    <result column="product_num" property="productNum" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img_url" property="productImgUrl" jdbcType="VARCHAR" />
    <result column="product_type_id" property="productTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, flag, create_time, create_userid, update_time, update_userid, product_num, product_name, 
    product_img_url, product_type_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.pojo.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.pojo.ProductExample" >
    delete from t_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Product" >
    insert into t_product (id, flag, create_time, 
      create_userid, update_time, update_userid, 
      product_num, product_name, product_img_url, 
      product_type_id)
    values (#{id,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserid,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserid,jdbcType=INTEGER}, 
      #{productNum,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{productImgUrl,jdbcType=VARCHAR}, 
      #{productTypeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.pojo.Product" >
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserid != null" >
        create_userid,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserid != null" >
        update_userid,
      </if>
      <if test="productNum != null" >
        product_num,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productImgUrl != null" >
        product_img_url,
      </if>
      <if test="productTypeId != null" >
        product_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="productNum != null" >
        #{productNum,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImgUrl != null" >
        #{productImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="productTypeId != null" >
        #{productTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.pojo.ProductExample" resultType="java.lang.Integer" >
    select count(*) from t_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null" >
        create_userid = #{record.createUserid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserid != null" >
        update_userid = #{record.updateUserid,jdbcType=INTEGER},
      </if>
      <if test="record.productNum != null" >
        product_num = #{record.productNum,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productImgUrl != null" >
        product_img_url = #{record.productImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeId != null" >
        product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_product
    set id = #{record.id,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_userid = #{record.createUserid,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_userid = #{record.updateUserid,jdbcType=INTEGER},
      product_num = #{record.productNum,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_img_url = #{record.productImgUrl,jdbcType=VARCHAR},
      product_type_id = #{record.productTypeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.pojo.Product" >
    update t_product
    <set >
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="productNum != null" >
        product_num = #{productNum,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImgUrl != null" >
        product_img_url = #{productImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="productTypeId != null" >
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Product" >
    update t_product
    set flag = #{flag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=INTEGER},
      product_num = #{productNum,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_img_url = #{productImgUrl,jdbcType=VARCHAR},
      product_type_id = #{productTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!-- 获取通过搜索信息获取所有的分页数据 -->
  <resultMap type="Product" id="findAllProBySearchInfoMap">
  	<id column="id" property="id" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_userid" property="updateUserid" jdbcType="INTEGER" />
    <result column="product_num" property="productNum" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img_url" property="productImgUrl" jdbcType="VARCHAR" />
    <result column="product_type_id" property="productTypeId" jdbcType="INTEGER" />
    <association property="productType" javaType="ProductType" select="com.neuedu.mapper.ProductTypeMapper.selectByPrimaryKey" column="product_type_id"></association>
    <association property="createUser" javaType="User" select="com.neuedu.mapper.UserMapper.selectByPrimaryKey" column="create_userid"></association>
  	<association property="updateUser" javaType="User" select="com.neuedu.mapper.UserMapper.selectByPrimaryKey" column="update_userid"></association>
  
  </resultMap>

  <select id="findAllProBySearchInfo" resultMap="findAllProBySearchInfoMap">
  select <include refid="Base_Column_List" />
  from t_product
  <where>
  	<if test="productName!=null and productName!=''">
  	and	product_name like '%${productName}%'
  	</if>
  	<if test="ids != null and ids.length>0">
	 and product_type_id IN
	  	<foreach collection="ids" index="index" item="item"
	             open="(" separator="," close=")">
	        #{item}
	    </foreach>
  	</if>
  </where>
  </select>
  <!-- 修改产品，其中图像可以是空 -->
  <update id="updateProduct" parameterType="com.neuedu.pojo.Product" >
    update t_product
    <set >
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="productNum != null" >
        product_num = #{productNum,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
        product_img_url = #{productImgUrl,jdbcType=VARCHAR},
      <if test="productTypeId != null" >
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id}
  </update>
  <!-- 根据产品类型找到所对应的产品 ,以及产品下对应的订单-->
  <resultMap id="selectProductsByProTypeIdMap" type="com.neuedu.pojo.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_userid" property="updateUserid" jdbcType="INTEGER" />
    <result column="product_num" property="productNum" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img_url" property="productImgUrl" jdbcType="VARCHAR" />
    <result column="product_type_id" property="productTypeId" jdbcType="INTEGER" />
    <collection property="productOrders" select="com.neuedu.mapper.ProductOrderMapper.selectEnDelProOrdersByProId" column="id"></collection>
  </resultMap>
  <select id="selectProductsByProTypeId" resultMap="selectProductsByProTypeIdMap" parameterType="int" >
    select <include refid="Base_Column_List" />
    from t_product
    where product_type_id=#{value}
  </select>
  <!-- 根据产品类型删除产品 -->
  <update id="deleteProductByProTypeId" parameterType="int" >
    update t_product
    set flag =1
    where product_type_id = #{value}
  </update>
  <!--删除 根据产品id找到所对应的可删除的产品订单 -->
  <select id="selectProductById" resultMap="selectProductsByProTypeIdMap" parameterType="int" >
    select <include refid="Base_Column_List" />
    from t_product
    where id=#{value}
  </select>
  <!-- 删除产品 -->
  <update id="deleteProductById" parameterType="int" >
    update t_product
    set flag =1
    where id = #{value}
  </update>
  <!--批量删除 根据产品id找到所对应的可删除的产品订单 -->
  <select id="selectProductsByIds" resultMap="selectProductsByProTypeIdMap" parameterType="int" >
    select <include refid="Base_Column_List" />
    from t_product
    <where>
     <if test="ids != null and ids.length>0">
	 and id IN
	  	<foreach collection="ids" index="index" item="item"
	             open="(" separator="," close=")">
	        #{item}
	    </foreach>
  	</if>
   </where>
  </select>
  <!-- 批量删除产品 -->
  <update id="deleteProductsByIds" parameterType="int">
    update t_product
    set flag =1
    <where>
     <if test="ids != null and ids.length>0">
	 and id IN
	  	<foreach collection="ids" index="index" item="item"
	             open="(" separator="," close=")">
	        #{item}
	    </foreach>
  	</if>
   </where>
  </update>
</mapper>